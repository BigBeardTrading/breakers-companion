name: Build & Attach Windows Release

on:
  push:
    tags:
      - 'v*'            # runs when you push a tag like v2.0.21, v2.0.22, etc.

# needed so the workflow can create/attach a GitHub Release
permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          # Matches what you've been using locally; PyInstaller 6.16+ supports 3.13
          python-version: '3.13'

      - name: Python info
        shell: pwsh
        run: |
          python -V
          where python

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") {
            python -m pip install -r requirements.txt
          }
          python -m pip install pyinstaller
          python -m PyInstaller --version

      - name: Build EXE (spec or app.py)
        shell: pwsh
        run: |
          if (Test-Path ".\Breakers Companion.spec") {
            python -m PyInstaller ".\Breakers Companion.spec"
          } else {
            Write-Host "Spec not found. Building from app.py as onefile..."
            python -m PyInstaller --noconfirm --onefile --name "Breakers Companion" ".\app.py"
          }

      - name: Verify build output
        shell: pwsh
        run: |
          Write-Host "dist contents:"
          Get-ChildItem ".\dist" -Recurse | Format-Table -AutoSize
          if (-not (Test-Path ".\dist\Breakers Companion.exe")) {
            throw "Build failed: '.\dist\Breakers Companion.exe' not found."
          }

      - name: Package folder
        shell: pwsh
        run: |
          $tag = "${{ github.ref_name }}"         # e.g., v2.0.21
          if ($tag -match '^v(.+)$') { $ver = $Matches[1] } else { $ver = $tag }
          $pkg = "Breakers Companion-$ver"

          Remove-Item -Recurse -Force $pkg -ErrorAction SilentlyContinue
          New-Item -ItemType Directory $pkg | Out-Null

          Copy-Item ".\dist\Breakers Companion.exe" "$pkg\Breakers Companion.exe"
          if (Test-Path ".\assets") { Copy-Item -Recurse -Force ".\assets" "$pkg\assets" }
          if (Test-Path ".\run.bat") { Copy-Item ".\run.bat" "$pkg\run.bat" }
          if (Test-Path ".\Version") { Copy-Item ".\Version" "$pkg\Version" }

          $zip = "$pkg.zip"
          Compress-Archive -Path "$pkg\*" -DestinationPath "$zip" -Force
          echo "ZIP=$zip" >> $env:GITHUB_ENV

      - name: Create / Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ZIP }}
          name: Breakers Companion ${{ github.ref_name }}
          draft: false
          prerelease: false
